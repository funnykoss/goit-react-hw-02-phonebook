{"version":3,"sources":["components/ContactList/ContactsList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactList/Contact.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handlerChange","event","target","value","setState","submitForm","preventDefault","newContact","id","shortid","generate","props","addContact","reset","className","s","title","form","onSubmit","this","label","htmlFor","input","type","pattern","required","onChange","button","Component","ContactList","contacts","onDeleteContact","map","contact","item","onClick","Filter","Contact","App","filter","console","log","undefined","find","prevState","alert","currentTarget","filterContacts","normalizeFilter","toLowerCase","includes","deleteContact","renderContactList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.838cd6e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsList_button__2Rff5\",\"item\":\"ContactsList_item__1xwZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\",\"title\":\"ContactForm_title__3MqSl\"};","import { Component } from \"react\";\nimport shortid from 'shortid';\nimport s from '../ContactForm/ContactForm.module.css'\n\nexport default class ContactForm extends Component{\n    state = {\n         name: '',\n        number: '',\n    }\n\n    handlerChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: [value] });\n  };\n\n    submitForm = event => {\n        event.preventDefault();\n        const newContact = {\n            id: shortid.generate(),\n            name: this.state.name,\n            number: this.state.number,\n      }\n      \n      this.props.addContact(newContact);\n      this.reset()\n    \n  }\n    reset = () => {\n        this.setState({ name: '', number: '',})\n    }\n    render(){\n        return (\n       <>\n        <h2 className={s.title}>Phonebook</h2>\n        <form  className={s.form} onSubmit={this.submitForm}>\n              <label className={s.label}\n                htmlFor={shortid.generate()}>\n            Name\n            <input className={s.input}\n              id={shortid.generate()}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handlerChange}\n            />\n          </label>\n              <label className={s.label}\n                htmlFor={shortid.generate()}>\n            Number\n            <input className={s.input}\n              id={shortid.generate()}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.handlerChange}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}> Add contacts</button>\n                </form>\n                </>\n    )\n}\n}","import React from 'react';\nimport s from '../ContactList/ContactsList.module.css'\n\nconst ContactList = ({ contacts, onDeleteContact  }) => {\n  return (\n    <ul>\n      {\n        contacts.map(contact =>(\n          <li className={s.item} key={contact.id}>\n            {contact.name} : {contact.number}\n            <button className={s.button}\n              type='button'\n              onClick={() => onDeleteContact(contact.id)} >\n           \n            Delete\n</button>\n      </li>\n        ))\n        \n      }\n    </ul>\n  )\n}\n\nexport default ContactList","import React from 'react';\nimport shortid from 'shortid';\nimport s from '../Filter/Filter.module.css'\n\nexport default function Filter({ value, onChange }) {\n    return (\n        <label className={s.label}\n            htmlFor={shortid.generate()}>\n            Find contact by name\n            <input className={s.input}\n                name=\"filter\"\n                type='text'\n                value={value}\n                onChange={onChange}/>\n        </label>\n    )\n}","import React from 'react';\nimport s from '../../App.css'\nconst Contact = () => {\n    return (\n         <section>\n        <h2 className={s.title}>Contacts</h2>\n     </section>\n     )\n      \n\n}\nexport default  Contact","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm.jsx';\nimport ContactList from './components/ContactList/ContactList.jsx';\nimport Filter from './components/Filter/Filter.jsx';\nimport Contact from './components/ContactList/Contact.jsx';\n// import shortid from 'shortid';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  addContact = newContact => {\n    console.log(newContact);\n    const contactCheck = this.state.contacts.find(\n      ({ name }) => name === newContact.name,\n    );\n\n    if (contactCheck !== undefined) {\n      alert(`${newContact.name} is already in contact`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n  onChange = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  filterContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ filter: '' });\n  };\n  render() {\n    const renderContactList = this.filterContacts();\n\n    return (\n      <>\n        <ContactForm addContact={this.addContact} />\n        <Contact />\n        <Filter value={this.state.filter} onChange={this.onChange} />\n        <ContactList\n          contacts={renderContactList}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}